
   In Java String is a sequence of character.

   But unlike other programming languages like C and C++ which takes string as a character array,
   In java String is an object of type String.

   String in Java is immutable, each time you make changes to an existing string, a new String object is
   created that contains the modifications. The original string is left unchanged.
   This approach is used because immutable strings can be implemented more efficiently than changeable ones.

   Java provides two options for modifiable String: StringBuffer and StringBuilder.
   Both hold strings that can be modified after they are created.

   The String, StringBuffer, and StringBuilder classes are defined in java.lang.

   All are declared final, which means that none of these classes may be subclassed. This
   allows certain optimizations that increase performance to take place on common string operations.

   All three implement the CharSequence interface.


   The String Constructors :

   1) Creating empty String :
      String str = new String();
      This will create an instance of String with no characters in it.

   2) Creating a String by initializing an array of characters:
      String(char charArray[ ])

   3) Creating a String object with another String object:
      String(String someStringObject)

   -> String Length: It is the number of characters in a String and can be found out by stringName.length() method.

   * String Literals :

    For each string literal in your program, Java automatically constructs a String object.
    Thus, you can use a string literal to initialize a String object.